{"version":3,"sources":["encapsulationPatch.js","tabs.js","layout.js","mdlComponentHandler.js","rAF.js","button.js","checkbox.js","icon-toggle.js","menu.js","progress.js","radio.js","slider.js","snackbar.js","spinner.js","switch.js","textfield.js","tooltip.js","data-table.js","ripple.js","mdlExport.js"],"names":["gWindow","vendor","window","undefined","MaterialTab","tab","ctx","element_","classList","contains","CssClasses_","MDL_JS_RIPPLE_EFFECT","rippleContainer","document","createElement","add","MDL_RIPPLE_CONTAINER","ripple","MDL_RIPPLE","appendChild","addEventListener","e","preventDefault","href","split","panel","querySelector","resetTabState_","resetPanelState_","ACTIVE_CLASS","MaterialLayoutTab","tabs","panels","layout","selectTab","content_","IS_ACTIVE","tabBar_","JS_RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","getAttribute","charAt","show","setTimeout","bind","removeEventListener","navigator","matchMedia","requestAnimationFrame","cancelAnimationFrame","componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","getUpgradedListOfElement_","dataUpgraded","isElementUpgraded_","upgradedList","indexOf","upgradeDomInternal","cssClass","registeredClass","querySelectorAll","n","upgradeElementInternal","Element","Error","classesToUpgrade","push","forEach","component","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","ev","CustomEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","upgradeElementsInternal","Array","isArray","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","item","hasOwnProperty","found","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","documentElement","Date","now","getTime","vendors","vp","test","userAgent","lastTime","nextTime","Math","max","clearTimeout","MaterialButton","this","init","Constant_","RIPPLE_EFFECT","blurHandler_","event","blur","disable","disabled","enable","rippleElement_","boundRippleBlurHandler","boundButtonBlurHandler","MaterialCheckbox","TINY_TIMEOUT","INPUT","BOX_OUTLINE","FOCUS_HELPER","TICK_OUTLINE","RIPPLE_IGNORE_EVENTS","RIPPLE_CENTER","IS_FOCUSED","IS_DISABLED","IS_CHECKED","IS_UPGRADED","onChange_","updateClasses_","onFocus_","onBlur_","remove","onMouseUp_","blur_","checkDisabled","checkToggleState","inputElement_","checked","check","uncheck","boxOutline","tickContainer","tickOutline","rippleContainerElement_","boundRippleMouseUp","boundInputOnChange","boundInputOnFocus","boundInputOnBlur","boundElementMouseUp","MaterialIconToggle","boundElementOnMouseUp","MaterialMenu","TRANSITION_DURATION_SECONDS","TRANSITION_DURATION_FRACTION","CLOSE_TIMEOUT","Keycodes_","ENTER","ESCAPE","SPACE","UP_ARROW","DOWN_ARROW","CONTAINER","OUTLINE","ITEM","ITEM_RIPPLE_CONTAINER","IS_VISIBLE","IS_ANIMATING","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNALIGNED","container","parentElement","insertBefore","removeChild","container_","outline","outline_","forElId","forEl","getElementById","forElement_","handleForClick_","handleForKeyboardEvent_","items","boundItemKeydown_","handleItemKeyboardEvent_","boundItemClick_","handleItemClick_","tabIndex","evt","rect","getBoundingClientRect","forRect","style","right","top","offsetTop","offsetHeight","left","offsetLeft","bottom","toggle","keyCode","focus","currentIndex","target","MouseEvent","click","hide","hasAttribute","stopPropagation","closing_","applyClip_","height","width","clip","removeAnimationEndListener_","addAnimationEndListener_","transitionDuration","itemDelay","transitionDelay","parentNode","removeProperty","MaterialProgress","INDETERMINATE_CLASS","setProgress","p","progressbar_","setBuffer","bufferbar_","auxbar_","el","MaterialRadio","JS_RADIO","RADIO_BTN","RADIO_OUTER_CIRCLE","RADIO_INNER_CIRCLE","radios","getElementsByClassName","button","btnElement_","onMouseup_","boundChangeHandler_","boundFocusHandler_","boundBlurHandler_","boundMouseUpHandler_","outerCircle","innerCircle","MaterialSlider","isIE_","msPointerEnabled","IE_CONTAINER","SLIDER_CONTAINER","BACKGROUND_FLEX","BACKGROUND_LOWER","BACKGROUND_UPPER","IS_LOWEST_VALUE","onInput_","updateValueStyles_","onContainerMouseDown_","newEvent","buttons","clientX","clientY","y","fraction","value","min","backgroundLower_","flex","webkitFlex","backgroundUpper_","change","containerIE","backgroundFlex","boundInputHandler","boundChangeHandler","boundMouseUpHandler","boundContainerMouseDownHandler","MaterialSnackbar","textElement_","cssClasses_","MESSAGE","actionElement_","ACTION","active","actionHandler_","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","textContent","cleanup_","timeout_","showSnackbar","data","checkQueue_","shift","Boolean","removeAttribute","MaterialSpinner","MDL_SPINNER_LAYER_COUNT","MDL_SPINNER_LAYER","MDL_SPINNER_CIRCLE_CLIPPER","MDL_SPINNER_CIRCLE","MDL_SPINNER_GAP_PATCH","MDL_SPINNER_LEFT","MDL_SPINNER_RIGHT","createLayer","index","layer","leftClipper","gapPatch","rightClipper","circleOwners","circle","stop","start","MaterialSwitch","TRACK","THUMB","on","off","track","thumb","focusHelper","boundFocusHandler","boundBlurHandler","MaterialTabs","TAB_CLASS","PANEL_CLASS","UPGRADED_CLASS","MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS","initTabs_","tabs_","panels_","k","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","IS_DIRTY","IS_INVALID","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","onReset_","checkValidity","checkDirty","checkFocus","input_","validity","valid","label_","parseInt","isNaN","boundUpdateClassesHandler","boundResetHandler","boundKeyDownHandler","invalid","MaterialTooltip","BOTTOM","LEFT","RIGHT","TOP","handleMouseEnter_","props","marginLeft","offsetWidth","marginTop","hideTooltip_","boundMouseEnterHandler","boundMouseLeaveAndScrollHandler","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","drawerButton","focusedElement","directChildren","childNodes","numChildren","c","child","persisted","overflowY","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","addListener","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","windowResizeHandler","resizeTimeoutId_","MaterialDataTable","DATA_TABLE","SELECTABLE","SELECT_ELEMENT","IS_SELECTED","selectRow_","checkbox","row","opt_rows","createCheckbox_","label","labelClasses","firstHeader","bodyRows","footRows","rows","concat","th","headerCheckbox","firstCell","td","nodeName","toUpperCase","rowCheckbox","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_EFFECT_IGNORE_EVENTS","downHandler_","boundHeight","boundWidth","rippleSize_","sqrt","ignoringMouseDown_","frameCount","getFrameCount","setFrameCount","x","bound","currentTarget","round","touches","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","transformString","scale","size","offset","webkitTransform","msTransform","transform","module","mdl","components","exports"],"mappings":"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","file":"material.min.js","sourcesContent":["/**\n * Encapsulation patch\n */\n\n  if (false === (gWindow === window)) {\n    window = window || {};\n\n    window.setTimeout = gWindow.setTimeout.bind(gWindow);\n    window.addEventListener = gWindow.addEventListener.bind(gWindow);\n    window.removeEventListener = gWindow.removeEventListener.bind(gWindow);\n    window.navigator = gWindow.navigator;\n    window.matchMedia = gWindow.matchMedia.bind(gWindow);\n    if(gWindow.requestAnimationFrame) { window.requestAnimationFrame = gWindow.requestAnimationFrame.bind(gWindow); }\n    if(gWindow.cancelAnimationFrame) { window.cancelAnimationFrame = gWindow.cancelAnimationFrame.bind(gWindow); }\n\n  }\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tabs MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialTabs = function MaterialTabs(element) {\n    // Stores the HTML element.\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTabs'] = MaterialTabs;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTabs.prototype.CssClasses_ = {\n    TAB_CLASS: 'mdl-tabs__tab',\n    PANEL_CLASS: 'mdl-tabs__panel',\n    ACTIVE_CLASS: 'is-active',\n    UPGRADED_CLASS: 'is-upgraded',\n    MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',\n    MDL_RIPPLE: 'mdl-ripple',\n    MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'\n};\n/**\n   * Handle clicks to a tabs component\n   *\n   * @private\n   */\nMaterialTabs.prototype.initTabs_ = function () {\n    if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n        this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);\n    }\n    // Select element tabs, document panels\n    this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);\n    this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);\n    // Create new tabs for each tab element\n    for (var i = 0; i < this.tabs_.length; i++) {\n        new MaterialTab(this.tabs_[i], this);\n    }\n    this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetTabState_ = function () {\n    for (var k = 0; k < this.tabs_.length; k++) {\n        this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialTabs.prototype.resetPanelState_ = function () {\n    for (var j = 0; j < this.panels_.length; j++) {\n        this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialTabs.prototype.init = function () {\n    if (this.element_) {\n        this.initTabs_();\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {Element} tab The HTML element for the tab.\n   * @param {MaterialTabs} ctx The MaterialTabs object that owns the tab.\n   */\nfunction MaterialTab(tab, ctx) {\n    if (tab) {\n        if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);\n            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);\n            var ripple = document.createElement('span');\n            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);\n            rippleContainer.appendChild(ripple);\n            tab.appendChild(rippleContainer);\n        }\n        tab.addEventListener('click', function (e) {\n            e.preventDefault();\n            var href = tab.href.split('#')[1];\n            var panel = ctx.element_.querySelector('#' + href);\n            ctx.resetTabState_();\n            ctx.resetPanelState_();\n            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);\n        });\n    }\n}\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTabs,\n    classAsString: 'MaterialTabs',\n    cssClass: 'mdl-js-tabs'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialLayout'] = MaterialLayout;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n};\n/**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n    ICON: 'material-icons',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n};\n/**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\nMaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n        return;\n    }\n    var headerVisible = !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) || this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        if (headerVisible) {\n            this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n        }\n    }\n};\n/**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE && this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.toggleDrawer();\n    }\n};\n/**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\nMaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n        this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n        // Collapse drawer (if any) when moving to a large screen size.\n        if (this.drawer_) {\n            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        }\n    }\n};\n/**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && evt.type === 'keydown') {\n        if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n            // prevent scrolling in drawer nav\n            evt.preventDefault();\n        } else {\n            // prevent other keys\n            return;\n        }\n    }\n    this.toggleDrawer();\n};\n/**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\nMaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n        this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n};\n/**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n        tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\nMaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n        panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n};\n/**\n  * Toggle drawer state\n  *\n  * @public\n  */\nMaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n        this.drawer_.setAttribute('aria-hidden', 'false');\n        drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n        this.drawer_.setAttribute('aria-hidden', 'true');\n        drawerButton.setAttribute('aria-expanded', 'false');\n    }\n};\nMaterialLayout.prototype['toggleDrawer'] = MaterialLayout.prototype.toggleDrawer;\n/**\n   * Initialize element.\n   */\nMaterialLayout.prototype.init = function () {\n    if (this.element_) {\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        var focusedElement = this.element_.querySelector(':focus');\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        if (focusedElement) {\n            focusedElement.focus();\n        }\n        var directChildren = this.element_.childNodes;\n        var numChildren = directChildren.length;\n        for (var c = 0; c < numChildren; c++) {\n            var child = directChildren[c];\n            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {\n                this.header_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {\n                this.drawer_ = child;\n            }\n            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {\n                this.content_ = child;\n            }\n        }\n        window.addEventListener('pageshow', function (e) {\n            if (e.persisted) {\n                // when page is loaded from back/forward cache\n                // trigger repaint to let layout scroll in safari\n                this.element_.style.overflowY = 'hidden';\n                requestAnimationFrame(function () {\n                    this.element_.style.overflowY = '';\n                }.bind(this));\n            }\n        }.bind(this), false);\n        if (this.header_) {\n            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n        }\n        var mode = this.Mode_.STANDARD;\n        if (this.header_) {\n            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n                mode = this.Mode_.SEAMED;\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {\n                mode = this.Mode_.WATERFALL;\n                this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));\n                this.header_.addEventListener('click', this.headerClickHandler_.bind(this));\n            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {\n                mode = this.Mode_.SCROLL;\n                container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n            }\n            if (mode === this.Mode_.STANDARD) {\n                this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n                this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                if (this.tabBar_) {\n                    this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n                }\n            } else if (mode === this.Mode_.WATERFALL) {\n                // Add and remove shadows depending on scroll position.\n                // Also add/remove auxiliary class for styling of the compact version of\n                // the header.\n                this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));\n                this.contentScrollHandler_();\n            }\n        }\n        // Add drawer toggling button to our layout, if we have an openable drawer.\n        if (this.drawer_) {\n            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n            if (!drawerButton) {\n                drawerButton = document.createElement('div');\n                drawerButton.setAttribute('aria-expanded', 'false');\n                drawerButton.setAttribute('role', 'button');\n                drawerButton.setAttribute('tabindex', '0');\n                drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n                var drawerButtonIcon = document.createElement('i');\n                drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n                drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n                drawerButton.appendChild(drawerButtonIcon);\n            }\n            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n                //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n                //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n                drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n            }\n            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            drawerButton.addEventListener('keydown', this.drawerToggleHandler_.bind(this));\n            // Add a class if the layout has a drawer, for altering the left padding.\n            // Adds the HAS_DRAWER to the elements since this.header_ may or may\n            // not be present.\n            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n            // If we have a fixed header, add the button to the header rather than\n            // the layout.\n            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n                this.header_.insertBefore(drawerButton, this.header_.firstChild);\n            } else {\n                this.element_.insertBefore(drawerButton, this.content_);\n            }\n            var obfuscator = document.createElement('div');\n            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n            this.element_.appendChild(obfuscator);\n            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));\n            this.obfuscator_ = obfuscator;\n            this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n            this.drawer_.setAttribute('aria-hidden', 'true');\n        }\n        // Keep an eye on screen size, and add/remove auxiliary class for styling\n        // of small screens.\n        this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);\n        this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n        this.screenSizeHandler_();\n        // Initialize tabs, if any.\n        if (this.header_ && this.tabBar_) {\n            this.element_.classList.add(this.CssClasses_.HAS_TABS);\n            var tabContainer = document.createElement('div');\n            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n            this.header_.insertBefore(tabContainer, this.tabBar_);\n            this.header_.removeChild(this.tabBar_);\n            var leftButton = document.createElement('div');\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n            var leftButtonIcon = document.createElement('i');\n            leftButtonIcon.classList.add(this.CssClasses_.ICON);\n            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n            leftButton.appendChild(leftButtonIcon);\n            leftButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            var rightButton = document.createElement('div');\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n            var rightButtonIcon = document.createElement('i');\n            rightButtonIcon.classList.add(this.CssClasses_.ICON);\n            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n            rightButton.appendChild(rightButtonIcon);\n            rightButton.addEventListener('click', function () {\n                this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n            }.bind(this));\n            tabContainer.appendChild(leftButton);\n            tabContainer.appendChild(this.tabBar_);\n            tabContainer.appendChild(rightButton);\n            // Add and remove tab buttons depending on scroll position and total\n            // window size.\n            var tabUpdateHandler = function () {\n                if (this.tabBar_.scrollLeft > 0) {\n                    leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n                if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n                    rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n                } else {\n                    rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n                }\n            }.bind(this);\n            this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n            tabUpdateHandler();\n            // Update tabs when the window resizes.\n            var windowResizeHandler = function () {\n                // Use timeouts to make sure it doesn't happen too often.\n                if (this.resizeTimeoutId_) {\n                    clearTimeout(this.resizeTimeoutId_);\n                }\n                this.resizeTimeoutId_ = setTimeout(function () {\n                    tabUpdateHandler();\n                    this.resizeTimeoutId_ = null;\n                }.bind(this), this.Constant_.RESIZE_TIMEOUT);\n            }.bind(this);\n            window.addEventListener('resize', windowResizeHandler);\n            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n                this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            }\n            // Select element tabs, document panels\n            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n            // Create new tabs for each tab element\n            for (var i = 0; i < tabs.length; i++) {\n                new MaterialLayoutTab(tabs[i], tabs, panels, this);\n            }\n        }\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\nfunction MaterialLayoutTab(tab, tabs, panels, layout) {\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n        var href = tab.href.split('#')[1];\n        var panel = layout.content_.querySelector('#' + href);\n        layout.resetTabState_(tabs);\n        layout.resetPanelState_(panels);\n        tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n        panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n    if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n        rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n        var ripple = document.createElement('span');\n        ripple.classList.add(layout.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(ripple);\n        tab.appendChild(rippleContainer);\n    }\n    tab.addEventListener('click', function (e) {\n        if (tab.getAttribute('href').charAt(0) === '#') {\n            e.preventDefault();\n            selectTab();\n        }\n    });\n    tab.show = selectTab;\n}\nwindow['MaterialLayoutTab'] = MaterialLayoutTab;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function(optJsClass, optCssClass) {},\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function(element, optJsClass) {},\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function(elements) {},\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function() {},\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function(jsClass, callback) {},\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function(config) {},\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function(nodes) {}\n};\n\ncomponentHandler = (function() {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n        typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n            registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function(component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n            classesToUpgrade.indexOf(component) === -1 &&\n            !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new CustomEvent('mdl-componentupgraded', {\n          bubbles: true, cancelable: false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentupgraded', true, true);\n      }\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n        typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function(item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n          'MDL component classes must not have ' + componentConfigProperty_ +\n          ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new CustomEvent('mdl-componentdowngraded', {\n          bubbles: true, cancelable: false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentdowngraded', true, true);\n      }\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function(node) {\n      createdComponents_.filter(function(item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n    componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n    componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function() {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n      'querySelector' in document &&\n      'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function() {};\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function() {};\n  }\n});\n","// Source: https://github.com/darius/requestAnimationFrame/blob/master/requestAnimationFrame.js\n// Adapted from https://gist.github.com/paulirish/1579671 which derived from\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n// http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n// requestAnimationFrame polyfill by Erik Möller.\n// Fixes from Paul Irish, Tino Zijdel, Andrew Mao, Klemen Slavič, Darius Bacon\n// MIT license\nif (!Date.now) {\n    /**\n   * Date.now polyfill.\n   * @return {number} the current Date\n   */\n    Date.now = function () {\n        return new Date().getTime();\n    };\n    Date['now'] = Date.now;\n}\nvar vendors = [\n    'webkit',\n    'moz'\n];\nfor (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}\nif (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    /**\n   * requestAnimationFrame polyfill.\n   * @param  {!Function} callback the callback function.\n   */\n    window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n            callback(lastTime = nextTime);\n        }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n    window['requestAnimationFrame'] = window.requestAnimationFrame;\n    window['cancelAnimationFrame'] = window.cancelAnimationFrame;\n}","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialButton'] = MaterialButton;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialButton.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n        this.element_.blur();\n    }\n};\n// Public methods.\n/**\n   * Disable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n/**\n   * Enable button.\n   *\n   * @public\n   */\nMaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n/**\n   * Initialize element.\n   */\nMaterialButton.prototype.init = function () {\n    if (this.element_) {\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            var rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleElement_ = document.createElement('span');\n            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(this.rippleElement_);\n            this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n        this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialCheckbox = function MaterialCheckbox(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialCheckbox'] = MaterialCheckbox;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialCheckbox.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialCheckbox.prototype.CssClasses_ = {\n    INPUT: 'mdl-checkbox__input',\n    BOX_OUTLINE: 'mdl-checkbox__box-outline',\n    FOCUS_HELPER: 'mdl-checkbox__focus-helper',\n    TICK_OUTLINE: 'mdl-checkbox__tick-outline',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialCheckbox.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialCheckbox.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;\n/**\n   * Disable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;\n/**\n   * Enable checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;\n/**\n   * Check checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;\n/**\n   * Uncheck checkbox.\n   *\n   * @public\n   */\nMaterialCheckbox.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialCheckbox.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var boxOutline = document.createElement('span');\n        boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);\n        var tickContainer = document.createElement('span');\n        tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);\n        var tickOutline = document.createElement('span');\n        tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);\n        boxOutline.appendChild(tickOutline);\n        this.element_.appendChild(tickContainer);\n        this.element_.appendChild(boxOutline);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialCheckbox,\n    classAsString: 'MaterialCheckbox',\n    cssClass: 'mdl-js-checkbox',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for icon toggle MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialIconToggle = function MaterialIconToggle(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialIconToggle'] = MaterialIconToggle;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialIconToggle.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialIconToggle.prototype.CssClasses_ = {\n    INPUT: 'mdl-icon-toggle__input',\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialIconToggle.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialIconToggle.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the inputs toggle state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;\n/**\n   * Check the inputs disabled state and update display.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;\n/**\n   * Disable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;\n/**\n   * Enable icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;\n/**\n   * Check icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.check = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;\n/**\n   * Uncheck icon toggle.\n   *\n   * @public\n   */\nMaterialIconToggle.prototype.uncheck = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialIconToggle.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.boundRippleMouseUp = this.onMouseUp_.bind(this);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundInputOnChange = this.onChange_.bind(this);\n        this.boundInputOnFocus = this.onFocus_.bind(this);\n        this.boundInputOnBlur = this.onBlur_.bind(this);\n        this.boundElementOnMouseUp = this.onMouseUp_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundInputOnChange);\n        this.inputElement_.addEventListener('focus', this.boundInputOnFocus);\n        this.inputElement_.addEventListener('blur', this.boundInputOnBlur);\n        this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialIconToggle,\n    classAsString: 'MaterialIconToggle',\n    cssClass: 'mdl-js-icon-toggle',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for dropdown MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialMenu = function MaterialMenu(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialMenu'] = MaterialMenu;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialMenu.prototype.Constant_ = {\n    // Total duration of the menu animation.\n    TRANSITION_DURATION_SECONDS: 0.3,\n    // The fraction of the total duration we want to use for menu item animations.\n    TRANSITION_DURATION_FRACTION: 0.8,\n    // How long the menu stays open after choosing an option (so the user can see\n    // the ripple).\n    CLOSE_TIMEOUT: 150\n};\n/**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\nMaterialMenu.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32,\n    UP_ARROW: 38,\n    DOWN_ARROW: 40\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialMenu.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-menu__container',\n    OUTLINE: 'mdl-menu__outline',\n    ITEM: 'mdl-menu__item',\n    ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    // Statuses\n    IS_UPGRADED: 'is-upgraded',\n    IS_VISIBLE: 'is-visible',\n    IS_ANIMATING: 'is-animating',\n    // Alignment options\n    BOTTOM_LEFT: 'mdl-menu--bottom-left',\n    // This is the default.\n    BOTTOM_RIGHT: 'mdl-menu--bottom-right',\n    TOP_LEFT: 'mdl-menu--top-left',\n    TOP_RIGHT: 'mdl-menu--top-right',\n    UNALIGNED: 'mdl-menu--unaligned'\n};\n/**\n   * Initialize element.\n   */\nMaterialMenu.prototype.init = function () {\n    if (this.element_) {\n        // Create container for the menu.\n        var container = document.createElement('div');\n        container.classList.add(this.CssClasses_.CONTAINER);\n        this.element_.parentElement.insertBefore(container, this.element_);\n        this.element_.parentElement.removeChild(this.element_);\n        container.appendChild(this.element_);\n        this.container_ = container;\n        // Create outline for the menu (shadow and background).\n        var outline = document.createElement('div');\n        outline.classList.add(this.CssClasses_.OUTLINE);\n        this.outline_ = outline;\n        container.insertBefore(outline, this.element_);\n        // Find the \"for\" element and bind events to it.\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        var forEl = null;\n        if (forElId) {\n            forEl = document.getElementById(forElId);\n            if (forEl) {\n                this.forElement_ = forEl;\n                forEl.addEventListener('click', this.handleForClick_.bind(this));\n                forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));\n            }\n        }\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);\n        this.boundItemClick_ = this.handleItemClick_.bind(this);\n        for (var i = 0; i < items.length; i++) {\n            // Add a listener to each menu item.\n            items[i].addEventListener('click', this.boundItemClick_);\n            // Add a tab index to each menu item.\n            items[i].tabIndex = '-1';\n            // Add a keyboard listener to each menu item.\n            items[i].addEventListener('keydown', this.boundItemKeydown_);\n        }\n        // Add ripple classes to each item, if the user has enabled ripples.\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            for (i = 0; i < items.length; i++) {\n                var item = items[i];\n                var rippleContainer = document.createElement('span');\n                rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);\n                var ripple = document.createElement('span');\n                ripple.classList.add(this.CssClasses_.RIPPLE);\n                rippleContainer.appendChild(ripple);\n                item.appendChild(rippleContainer);\n                item.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            }\n        }\n        // Copy alignment classes to the container, so the outline can use them.\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);\n        }\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n            this.outline_.classList.add(this.CssClasses_.UNALIGNED);\n        }\n        container.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n/**\n   * Handles a click on the \"for\" element, by positioning the menu and then\n   * toggling it.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForClick_ = function (evt) {\n    if (this.element_ && this.forElement_) {\n        var rect = this.forElement_.getBoundingClientRect();\n        var forRect = this.forElement_.parentElement.getBoundingClientRect();\n        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n            // Position below the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n            // Position above the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n            // Position above the \"for\" element, aligned to its right.\n            this.container_.style.right = forRect.right - rect.right + 'px';\n            this.container_.style.bottom = forRect.bottom - rect.top + 'px';\n        } else {\n            // Default: position below the \"for\" element, aligned to its left.\n            this.container_.style.left = this.forElement_.offsetLeft + 'px';\n            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';\n        }\n    }\n    this.toggle(evt);\n};\n/**\n   * Handles a keyboard event on the \"for\" element.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleForKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_ && this.forElement_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                items[items.length - 1].focus();\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                items[0].focus();\n            }\n        }\n    }\n};\n/**\n   * Handles a keyboard event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemKeyboardEvent_ = function (evt) {\n    if (this.element_ && this.container_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');\n        if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);\n            if (evt.keyCode === this.Keycodes_.UP_ARROW) {\n                evt.preventDefault();\n                if (currentIndex > 0) {\n                    items[currentIndex - 1].focus();\n                } else {\n                    items[items.length - 1].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {\n                evt.preventDefault();\n                if (items.length > currentIndex + 1) {\n                    items[currentIndex + 1].focus();\n                } else {\n                    items[0].focus();\n                }\n            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n                evt.preventDefault();\n                // Send mousedown and mouseup to trigger ripple.\n                var e = new MouseEvent('mousedown');\n                evt.target.dispatchEvent(e);\n                e = new MouseEvent('mouseup');\n                evt.target.dispatchEvent(e);\n                // Send click.\n                evt.target.click();\n            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {\n                evt.preventDefault();\n                this.hide();\n            }\n        }\n    }\n};\n/**\n   * Handles a click event on an item.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\nMaterialMenu.prototype.handleItemClick_ = function (evt) {\n    if (evt.target.hasAttribute('disabled')) {\n        evt.stopPropagation();\n    } else {\n        // Wait some time before closing menu, so the user can see the ripple.\n        this.closing_ = true;\n        window.setTimeout(function (evt) {\n            this.hide();\n            this.closing_ = false;\n        }.bind(this), this.Constant_.CLOSE_TIMEOUT);\n    }\n};\n/**\n   * Calculates the initial clip (for opening the menu) or final clip (for closing\n   * it), and applies it. This allows us to animate from or to the correct point,\n   * that is, the point it's aligned to in the \"for\" element.\n   *\n   * @param {number} height Height of the clip rectangle\n   * @param {number} width Width of the clip rectangle\n   * @private\n   */\nMaterialMenu.prototype.applyClip_ = function (height, width) {\n    if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {\n        // Do not clip.\n        this.element_.style.clip = '';\n    } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {\n        // Clip to the top right corner of the menu.\n        this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {\n        // Clip to the bottom left corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';\n    } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n        // Clip to the bottom right corner of the menu.\n        this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';\n    } else {\n        // Default: do not clip (same as clipping to the top left corner).\n        this.element_.style.clip = '';\n    }\n};\n/**\n   * Cleanup function to remove animation listeners.\n   *\n   * @param {Event} evt\n   * @private\n   */\nMaterialMenu.prototype.removeAnimationEndListener_ = function (evt) {\n    evt.target.classList.remove(MaterialMenu.prototype.CssClasses_.IS_ANIMATING);\n};\n/**\n   * Adds an event listener to clean up after the animation ends.\n   *\n   * @private\n   */\nMaterialMenu.prototype.addAnimationEndListener_ = function () {\n    this.element_.addEventListener('transitionend', this.removeAnimationEndListener_);\n    this.element_.addEventListener('webkitTransitionEnd', this.removeAnimationEndListener_);\n};\n/**\n   * Displays the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.show = function (evt) {\n    if (this.element_ && this.container_ && this.outline_) {\n        // Measure the inner element.\n        var height = this.element_.getBoundingClientRect().height;\n        var width = this.element_.getBoundingClientRect().width;\n        // Apply the inner element's size to the container and outline.\n        this.container_.style.width = width + 'px';\n        this.container_.style.height = height + 'px';\n        this.outline_.style.width = width + 'px';\n        this.outline_.style.height = height + 'px';\n        var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;\n        // Calculate transition delays for individual menu items, so that they fade\n        // in one at a time.\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        for (var i = 0; i < items.length; i++) {\n            var itemDelay = null;\n            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {\n                itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';\n            } else {\n                itemDelay = items[i].offsetTop / height * transitionDuration + 's';\n            }\n            items[i].style.transitionDelay = itemDelay;\n        }\n        // Apply the initial clip to the text before we start animating.\n        this.applyClip_(height, width);\n        // Wait for the next frame, turn on animation, and apply the final clip.\n        // Also make it visible. This triggers the transitions.\n        window.requestAnimationFrame(function () {\n            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';\n            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);\n        }.bind(this));\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n        // Add a click listener to the document, to close the menu.\n        var callback = function (e) {\n            // Check to see if the document is processing the same event that\n            // displayed the menu in the first place. If so, do nothing.\n            // Also check to see if the menu is in the process of closing itself, and\n            // do nothing in that case.\n            // Also check if the clicked element is a menu item\n            // if so, do nothing.\n            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {\n                document.removeEventListener('click', callback);\n                this.hide();\n            }\n        }.bind(this);\n        document.addEventListener('click', callback);\n    }\n};\nMaterialMenu.prototype['show'] = MaterialMenu.prototype.show;\n/**\n   * Hides the menu.\n   *\n   * @public\n   */\nMaterialMenu.prototype.hide = function () {\n    if (this.element_ && this.container_ && this.outline_) {\n        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);\n        // Remove all transition delays; menu items fade out concurrently.\n        for (var i = 0; i < items.length; i++) {\n            items[i].style.removeProperty('transition-delay');\n        }\n        // Measure the inner element.\n        var rect = this.element_.getBoundingClientRect();\n        var height = rect.height;\n        var width = rect.width;\n        // Turn on animation, and apply the final clip. Also make invisible.\n        // This triggers the transitions.\n        this.element_.classList.add(this.CssClasses_.IS_ANIMATING);\n        this.applyClip_(height, width);\n        this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        // Clean up after the animation is complete.\n        this.addAnimationEndListener_();\n    }\n};\nMaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;\n/**\n   * Displays or hides the menu, depending on current state.\n   *\n   * @public\n   */\nMaterialMenu.prototype.toggle = function (evt) {\n    if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {\n        this.hide();\n    } else {\n        this.show(evt);\n    }\n};\nMaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialMenu,\n    classAsString: 'MaterialMenu',\n    cssClass: 'mdl-js-menu',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Progress MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialProgress = function MaterialProgress(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialProgress'] = MaterialProgress;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialProgress.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialProgress.prototype.CssClasses_ = { INDETERMINATE_CLASS: 'mdl-progress__indeterminate' };\n/**\n   * Set the current progress of the progressbar.\n   *\n   * @param {number} p Percentage of the progress (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setProgress = function (p) {\n    if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {\n        return;\n    }\n    this.progressbar_.style.width = p + '%';\n};\nMaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;\n/**\n   * Set the current progress of the buffer.\n   *\n   * @param {number} p Percentage of the buffer (0-100)\n   * @public\n   */\nMaterialProgress.prototype.setBuffer = function (p) {\n    this.bufferbar_.style.width = p + '%';\n    this.auxbar_.style.width = 100 - p + '%';\n};\nMaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;\n/**\n   * Initialize element.\n   */\nMaterialProgress.prototype.init = function () {\n    if (this.element_) {\n        var el = document.createElement('div');\n        el.className = 'progressbar bar bar1';\n        this.element_.appendChild(el);\n        this.progressbar_ = el;\n        el = document.createElement('div');\n        el.className = 'bufferbar bar bar2';\n        this.element_.appendChild(el);\n        this.bufferbar_ = el;\n        el = document.createElement('div');\n        el.className = 'auxbar bar bar3';\n        this.element_.appendChild(el);\n        this.auxbar_ = el;\n        this.progressbar_.style.width = '0%';\n        this.bufferbar_.style.width = '100%';\n        this.auxbar_.style.width = '0%';\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialProgress,\n    classAsString: 'MaterialProgress',\n    cssClass: 'mdl-js-progress',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Radio MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRadio = function MaterialRadio(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRadio'] = MaterialRadio;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRadio.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRadio.prototype.CssClasses_ = {\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked',\n    IS_UPGRADED: 'is-upgraded',\n    JS_RADIO: 'mdl-js-radio',\n    RADIO_BTN: 'mdl-radio__button',\n    RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',\n    RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-radio__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onChange_ = function (event) {\n    // Since other radio buttons don't get change events, we need to look for\n    // them to update their classes.\n    var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);\n    for (var i = 0; i < radios.length; i++) {\n        var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);\n        // Different name == different group, so no point updating those.\n        if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {\n            radios[i]['MaterialRadio'].updateClasses_();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRadio.prototype.onMouseup_ = function (event) {\n    this.blur_();\n};\n/**\n   * Update classes.\n   *\n   * @private\n   */\nMaterialRadio.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialRadio.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.btnElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkDisabled = function () {\n    if (this.btnElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialRadio.prototype.checkToggleState = function () {\n    if (this.btnElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;\n/**\n   * Disable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.disable = function () {\n    this.btnElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;\n/**\n   * Enable radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.enable = function () {\n    this.btnElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;\n/**\n   * Check radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.check = function () {\n    this.btnElement_.checked = true;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['check'] = MaterialRadio.prototype.check;\n/**\n   * Uncheck radio.\n   *\n   * @public\n   */\nMaterialRadio.prototype.uncheck = function () {\n    this.btnElement_.checked = false;\n    this.onChange_(null);\n};\nMaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;\n/**\n   * Initialize element.\n   */\nMaterialRadio.prototype.init = function () {\n    if (this.element_) {\n        this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);\n        this.boundChangeHandler_ = this.onChange_.bind(this);\n        this.boundFocusHandler_ = this.onChange_.bind(this);\n        this.boundBlurHandler_ = this.onBlur_.bind(this);\n        this.boundMouseUpHandler_ = this.onMouseup_.bind(this);\n        var outerCircle = document.createElement('span');\n        outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);\n        var innerCircle = document.createElement('span');\n        innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);\n        this.element_.appendChild(outerCircle);\n        this.element_.appendChild(innerCircle);\n        var rippleContainer;\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            rippleContainer = document.createElement('span');\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            rippleContainer.appendChild(ripple);\n            this.element_.appendChild(rippleContainer);\n        }\n        this.btnElement_.addEventListener('change', this.boundChangeHandler_);\n        this.btnElement_.addEventListener('focus', this.boundFocusHandler_);\n        this.btnElement_.addEventListener('blur', this.boundBlurHandler_);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRadio,\n    classAsString: 'MaterialRadio',\n    cssClass: 'mdl-js-radio',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Slider MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSlider = function MaterialSlider(element) {\n    this.element_ = element;\n    // Browser feature detection.\n    this.isIE_ = window.navigator.msPointerEnabled;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSlider'] = MaterialSlider;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSlider.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSlider.prototype.CssClasses_ = {\n    IE_CONTAINER: 'mdl-slider__ie-container',\n    SLIDER_CONTAINER: 'mdl-slider__container',\n    BACKGROUND_FLEX: 'mdl-slider__background-flex',\n    BACKGROUND_LOWER: 'mdl-slider__background-lower',\n    BACKGROUND_UPPER: 'mdl-slider__background-upper',\n    IS_LOWEST_VALUE: 'is-lowest-value',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Handle input on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onInput_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle change on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onChange_ = function (event) {\n    this.updateValueStyles_();\n};\n/**\n   * Handle mouseup on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSlider.prototype.onMouseUp_ = function (event) {\n    event.target.blur();\n};\n/**\n   * Handle mousedown on container element.\n   * This handler is purpose is to not require the use to click\n   * exactly on the 2px slider element, as FireFox seems to be very\n   * strict about this.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   * @suppress {missingProperties}\n   */\nMaterialSlider.prototype.onContainerMouseDown_ = function (event) {\n    // If this click is not on the parent element (but rather some child)\n    // ignore. It may still bubble up.\n    if (event.target !== this.element_.parentElement) {\n        return;\n    }\n    // Discard the original event and create a new event that\n    // is on the slider element.\n    event.preventDefault();\n    var newEvent = new MouseEvent('mousedown', {\n        target: event.target,\n        buttons: event.buttons,\n        clientX: event.clientX,\n        clientY: this.element_.getBoundingClientRect().y\n    });\n    this.element_.dispatchEvent(newEvent);\n};\n/**\n   * Handle updating of values.\n   *\n   * @private\n   */\nMaterialSlider.prototype.updateValueStyles_ = function () {\n    // Calculate and apply percentages to div structure behind slider.\n    var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);\n    if (fraction === 0) {\n        this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);\n    }\n    if (!this.isIE_) {\n        this.backgroundLower_.style.flex = fraction;\n        this.backgroundLower_.style.webkitFlex = fraction;\n        this.backgroundUpper_.style.flex = 1 - fraction;\n        this.backgroundUpper_.style.webkitFlex = 1 - fraction;\n    }\n};\n// Public methods.\n/**\n   * Disable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.disable = function () {\n    this.element_.disabled = true;\n};\nMaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;\n/**\n   * Enable slider.\n   *\n   * @public\n   */\nMaterialSlider.prototype.enable = function () {\n    this.element_.disabled = false;\n};\nMaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;\n/**\n   * Update slider value.\n   *\n   * @param {number} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialSlider.prototype.change = function (value) {\n    if (typeof value !== 'undefined') {\n        this.element_.value = value;\n    }\n    this.updateValueStyles_();\n};\nMaterialSlider.prototype['change'] = MaterialSlider.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialSlider.prototype.init = function () {\n    if (this.element_) {\n        if (this.isIE_) {\n            // Since we need to specify a very large height in IE due to\n            // implementation limitations, we add a parent here that trims it down to\n            // a reasonable size.\n            var containerIE = document.createElement('div');\n            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);\n            this.element_.parentElement.insertBefore(containerIE, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            containerIE.appendChild(this.element_);\n        } else {\n            // For non-IE browsers, we need a div structure that sits behind the\n            // slider and allows us to style the left and right sides of it with\n            // different colors.\n            var container = document.createElement('div');\n            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);\n            this.element_.parentElement.insertBefore(container, this.element_);\n            this.element_.parentElement.removeChild(this.element_);\n            container.appendChild(this.element_);\n            var backgroundFlex = document.createElement('div');\n            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);\n            container.appendChild(backgroundFlex);\n            this.backgroundLower_ = document.createElement('div');\n            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);\n            backgroundFlex.appendChild(this.backgroundLower_);\n            this.backgroundUpper_ = document.createElement('div');\n            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);\n            backgroundFlex.appendChild(this.backgroundUpper_);\n        }\n        this.boundInputHandler = this.onInput_.bind(this);\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);\n        this.element_.addEventListener('input', this.boundInputHandler);\n        this.element_.addEventListener('change', this.boundChangeHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);\n        this.updateValueStyles_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSlider,\n    classAsString: 'MaterialSlider',\n    cssClass: 'mdl-js-slider',\n    widget: true\n});","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n        throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n        throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n};\nwindow['MaterialSnackbar'] = MaterialSnackbar;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n};\n/**\n   * Display the snackbar.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n    if (this.actionHandler_) {\n        this.actionElement_.textContent = this.actionText_;\n        this.actionElement_.addEventListener('click', this.actionHandler_);\n        this.setActionHidden_(false);\n    }\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n};\n/**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\nMaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n        throw new Error('Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n        throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n        throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n        this.queuedNotifications_.push(data);\n    } else {\n        this.active = true;\n        this.message_ = data['message'];\n        if (data['timeout']) {\n            this.timeout_ = data['timeout'];\n        } else {\n            this.timeout_ = 2750;\n        }\n        if (data['actionHandler']) {\n            this.actionHandler_ = data['actionHandler'];\n        }\n        if (data['actionText']) {\n            this.actionText_ = data['actionText'];\n        }\n        this.displaySnackbar_();\n    }\n};\nMaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n/**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n        this.showSnackbar(this.queuedNotifications_.shift());\n    }\n};\n/**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\nMaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n        this.element_.setAttribute('aria-hidden', 'true');\n        this.textElement_.textContent = '';\n        if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n            this.setActionHidden_(true);\n            this.actionElement_.textContent = '';\n            this.actionElement_.removeEventListener('click', this.actionHandler_);\n        }\n        this.actionHandler_ = undefined;\n        this.message_ = undefined;\n        this.actionText_ = undefined;\n        this.active = false;\n        this.checkQueue_();\n    }.bind(this), this.Constant_.ANIMATION_LENGTH);\n};\n/**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value\n   * @private\n   */\nMaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n        this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n        this.actionElement_.removeAttribute('aria-hidden');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Spinner MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   * @constructor\n   */\nvar MaterialSpinner = function MaterialSpinner(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSpinner'] = MaterialSpinner;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSpinner.prototype.Constant_ = { MDL_SPINNER_LAYER_COUNT: 4 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSpinner.prototype.CssClasses_ = {\n    MDL_SPINNER_LAYER: 'mdl-spinner__layer',\n    MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',\n    MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',\n    MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',\n    MDL_SPINNER_LEFT: 'mdl-spinner__left',\n    MDL_SPINNER_RIGHT: 'mdl-spinner__right'\n};\n/**\n   * Auxiliary method to create a spinner layer.\n   *\n   * @param {number} index Index of the layer to be created.\n   * @public\n   */\nMaterialSpinner.prototype.createLayer = function (index) {\n    var layer = document.createElement('div');\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);\n    layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);\n    var leftClipper = document.createElement('div');\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);\n    var gapPatch = document.createElement('div');\n    gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);\n    var rightClipper = document.createElement('div');\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);\n    rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);\n    var circleOwners = [\n        leftClipper,\n        gapPatch,\n        rightClipper\n    ];\n    for (var i = 0; i < circleOwners.length; i++) {\n        var circle = document.createElement('div');\n        circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);\n        circleOwners[i].appendChild(circle);\n    }\n    layer.appendChild(leftClipper);\n    layer.appendChild(gapPatch);\n    layer.appendChild(rightClipper);\n    this.element_.appendChild(layer);\n};\nMaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;\n/**\n   * Stops the spinner animation.\n   * Public method for users who need to stop the spinner for any reason.\n   *\n   * @public\n   */\nMaterialSpinner.prototype.stop = function () {\n    this.element_.classList.remove('is-active');\n};\nMaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;\n/**\n   * Starts the spinner animation.\n   * Public method for users who need to manually start the spinner for any reason\n   * (instead of just adding the 'is-active' class to their markup).\n   *\n   * @public\n   */\nMaterialSpinner.prototype.start = function () {\n    this.element_.classList.add('is-active');\n};\nMaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;\n/**\n   * Initialize element.\n   */\nMaterialSpinner.prototype.init = function () {\n    if (this.element_) {\n        for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {\n            this.createLayer(i);\n        }\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSpinner,\n    classAsString: 'MaterialSpinner',\n    cssClass: 'mdl-js-spinner',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Checkbox MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialSwitch = function MaterialSwitch(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialSwitch'] = MaterialSwitch;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialSwitch.prototype.Constant_ = { TINY_TIMEOUT: 0.001 };\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialSwitch.prototype.CssClasses_ = {\n    INPUT: 'mdl-switch__input',\n    TRACK: 'mdl-switch__track',\n    THUMB: 'mdl-switch__thumb',\n    FOCUS_HELPER: 'mdl-switch__focus-helper',\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE_CONTAINER: 'mdl-switch__ripple-container',\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE: 'mdl-ripple',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_CHECKED: 'is-checked'\n};\n/**\n   * Handle change of state.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onChange_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle mouseup.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialSwitch.prototype.onMouseUp_ = function (event) {\n    this.blur_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkToggleState();\n};\n/**\n   * Add blur.\n   *\n   * @private\n   */\nMaterialSwitch.prototype.blur_ = function () {\n    // TODO: figure out why there's a focus event being fired after our blur,\n    // so that we can avoid this hack.\n    window.setTimeout(function () {\n        this.inputElement_.blur();\n    }.bind(this), this.Constant_.TINY_TIMEOUT);\n};\n// Public methods.\n/**\n   * Check the components disabled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkDisabled = function () {\n    if (this.inputElement_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;\n/**\n   * Check the components toggled state.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.checkToggleState = function () {\n    if (this.inputElement_.checked) {\n        this.element_.classList.add(this.CssClasses_.IS_CHECKED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_CHECKED);\n    }\n};\nMaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;\n/**\n   * Disable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.disable = function () {\n    this.inputElement_.disabled = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;\n/**\n   * Enable switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.enable = function () {\n    this.inputElement_.disabled = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;\n/**\n   * Activate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.on = function () {\n    this.inputElement_.checked = true;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;\n/**\n   * Deactivate switch.\n   *\n   * @public\n   */\nMaterialSwitch.prototype.off = function () {\n    this.inputElement_.checked = false;\n    this.updateClasses_();\n};\nMaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;\n/**\n   * Initialize element.\n   */\nMaterialSwitch.prototype.init = function () {\n    if (this.element_) {\n        this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        var track = document.createElement('div');\n        track.classList.add(this.CssClasses_.TRACK);\n        var thumb = document.createElement('div');\n        thumb.classList.add(this.CssClasses_.THUMB);\n        var focusHelper = document.createElement('span');\n        focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);\n        thumb.appendChild(focusHelper);\n        this.element_.appendChild(track);\n        this.element_.appendChild(thumb);\n        this.boundMouseUpHandler = this.onMouseUp_.bind(this);\n        if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n            this.rippleContainerElement_ = document.createElement('span');\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);\n            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);\n            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);\n            var ripple = document.createElement('span');\n            ripple.classList.add(this.CssClasses_.RIPPLE);\n            this.rippleContainerElement_.appendChild(ripple);\n            this.element_.appendChild(this.rippleContainerElement_);\n        }\n        this.boundChangeHandler = this.onChange_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.inputElement_.addEventListener('change', this.boundChangeHandler);\n        this.inputElement_.addEventListener('focus', this.boundFocusHandler);\n        this.inputElement_.addEventListener('blur', this.boundBlurHandler);\n        this.element_.addEventListener('mouseup', this.boundMouseUpHandler);\n        this.updateClasses_();\n        this.element_.classList.add('is-upgraded');\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialSwitch,\n    classAsString: 'MaterialSwitch',\n    cssClass: 'mdl-js-switch',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTextfield'] = MaterialTextfield;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n};\n/**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n        if (currentRowCount >= this.maxRows) {\n            event.preventDefault();\n        }\n    }\n};\n/**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n};\n/**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n};\n/**\n   * Handle class updates.\n   *\n   * @private\n   */\nMaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n};\n// Public methods.\n/**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n        this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n};\nMaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;\n/**\n  * Check the focus state and update field accordingly.\n  *\n  * @public\n  */\nMaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n};\nMaterialTextfield.prototype['checkFocus'] = MaterialTextfield.prototype.checkFocus;\n/**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n        if (this.input_.validity.valid) {\n            this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n        } else {\n            this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n    }\n};\nMaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;\n/**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n        this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n        this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n};\nMaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;\n/**\n   * Disable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n/**\n   * Enable text field.\n   *\n   * @public\n   */\nMaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n/**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\nMaterialTextfield.prototype.change = function (value) {\n    this.input_.value = value || '';\n    this.updateClasses_();\n};\nMaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n/**\n   * Initialize element.\n   */\nMaterialTextfield.prototype.init = function () {\n    if (this.element_) {\n        this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n        this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n        if (this.input_) {\n            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {\n                this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);\n                if (isNaN(this.maxRows)) {\n                    this.maxRows = this.Constant_.NO_MAX_ROWS;\n                }\n            }\n            if (this.input_.hasAttribute('placeholder')) {\n                this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n            }\n            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n            this.boundFocusHandler = this.onFocus_.bind(this);\n            this.boundBlurHandler = this.onBlur_.bind(this);\n            this.boundResetHandler = this.onReset_.bind(this);\n            this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n            this.input_.addEventListener('focus', this.boundFocusHandler);\n            this.input_.addEventListener('blur', this.boundBlurHandler);\n            this.input_.addEventListener('reset', this.boundResetHandler);\n            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n                // TODO: This should handle pasting multi line text.\n                // Currently doesn't.\n                this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n                this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n            }\n            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);\n            this.updateClasses_();\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n            if (invalid) {\n                this.element_.classList.add(this.CssClasses_.IS_INVALID);\n            }\n            if (this.input_.hasAttribute('autofocus')) {\n                this.element_.focus();\n                this.checkFocus();\n            }\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Tooltip MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialTooltip = function MaterialTooltip(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialTooltip'] = MaterialTooltip;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialTooltip.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialTooltip.prototype.CssClasses_ = {\n    IS_ACTIVE: 'is-active',\n    BOTTOM: 'mdl-tooltip--bottom',\n    LEFT: 'mdl-tooltip--left',\n    RIGHT: 'mdl-tooltip--right',\n    TOP: 'mdl-tooltip--top'\n};\n/**\n   * Handle mouseenter for tooltip.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialTooltip.prototype.handleMouseEnter_ = function (event) {\n    var props = event.target.getBoundingClientRect();\n    var left = props.left + props.width / 2;\n    var top = props.top + props.height / 2;\n    var marginLeft = -1 * (this.element_.offsetWidth / 2);\n    var marginTop = -1 * (this.element_.offsetHeight / 2);\n    if (this.element_.classList.contains(this.CssClasses_.LEFT) || this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        left = props.width / 2;\n        if (top + marginTop < 0) {\n            this.element_.style.top = '0';\n            this.element_.style.marginTop = '0';\n        } else {\n            this.element_.style.top = top + 'px';\n            this.element_.style.marginTop = marginTop + 'px';\n        }\n    } else {\n        if (left + marginLeft < 0) {\n            this.element_.style.left = '0';\n            this.element_.style.marginLeft = '0';\n        } else {\n            this.element_.style.left = left + 'px';\n            this.element_.style.marginLeft = marginLeft + 'px';\n        }\n    }\n    if (this.element_.classList.contains(this.CssClasses_.TOP)) {\n        this.element_.style.top = props.top - this.element_.offsetHeight - 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.RIGHT)) {\n        this.element_.style.left = props.left + props.width + 10 + 'px';\n    } else if (this.element_.classList.contains(this.CssClasses_.LEFT)) {\n        this.element_.style.left = props.left - this.element_.offsetWidth - 10 + 'px';\n    } else {\n        this.element_.style.top = props.top + props.height + 10 + 'px';\n    }\n    this.element_.classList.add(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Hide tooltip on mouseleave or scroll\n   *\n   * @private\n   */\nMaterialTooltip.prototype.hideTooltip_ = function () {\n    this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);\n};\n/**\n   * Initialize element.\n   */\nMaterialTooltip.prototype.init = function () {\n    if (this.element_) {\n        var forElId = this.element_.getAttribute('for') || this.element_.getAttribute('data-mdl-for');\n        if (forElId) {\n            this.forElement_ = document.getElementById(forElId);\n        }\n        if (this.forElement_) {\n            // It's left here because it prevents accidental text selection on Android\n            if (!this.forElement_.hasAttribute('tabindex')) {\n                this.forElement_.setAttribute('tabindex', '0');\n            }\n            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);\n            this.boundMouseLeaveAndScrollHandler = this.hideTooltip_.bind(this);\n            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('touchend', this.boundMouseEnterHandler, false);\n            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveAndScrollHandler, false);\n            window.addEventListener('scroll', this.boundMouseLeaveAndScrollHandler, true);\n            window.addEventListener('touchstart', this.boundMouseLeaveAndScrollHandler);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialTooltip,\n    classAsString: 'MaterialTooltip',\n    cssClass: 'mdl-tooltip'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Data Table Card MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\nvar MaterialDataTable = function MaterialDataTable(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialDataTable'] = MaterialDataTable;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialDataTable.prototype.Constant_ = {};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialDataTable.prototype.CssClasses_ = {\n    DATA_TABLE: 'mdl-data-table',\n    SELECTABLE: 'mdl-data-table--selectable',\n    SELECT_ELEMENT: 'mdl-data-table__select',\n    IS_SELECTED: 'is-selected',\n    IS_UPGRADED: 'is-upgraded'\n};\n/**\n   * Generates and returns a function that toggles the selection state of a\n   * single row (or multiple rows).\n   *\n   * @param {Element} checkbox Checkbox that toggles the selection state.\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.selectRow_ = function (checkbox, row, opt_rows) {\n    if (row) {\n        return function () {\n            if (checkbox.checked) {\n                row.classList.add(this.CssClasses_.IS_SELECTED);\n            } else {\n                row.classList.remove(this.CssClasses_.IS_SELECTED);\n            }\n        }.bind(this);\n    }\n    if (opt_rows) {\n        return function () {\n            var i;\n            var el;\n            if (checkbox.checked) {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].check();\n                    opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);\n                }\n            } else {\n                for (i = 0; i < opt_rows.length; i++) {\n                    el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');\n                    el['MaterialCheckbox'].uncheck();\n                    opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);\n                }\n            }\n        }.bind(this);\n    }\n};\n/**\n   * Creates a checkbox for a single or or multiple rows and hooks up the\n   * event handling.\n   *\n   * @param {Element} row Row to toggle when checkbox changes.\n   * @param {(Array<Object>|NodeList)=} opt_rows Rows to toggle when checkbox changes.\n   * @private\n   */\nMaterialDataTable.prototype.createCheckbox_ = function (row, opt_rows) {\n    var label = document.createElement('label');\n    var labelClasses = [\n        'mdl-checkbox',\n        'mdl-js-checkbox',\n        'mdl-js-ripple-effect',\n        this.CssClasses_.SELECT_ELEMENT\n    ];\n    label.className = labelClasses.join(' ');\n    var checkbox = document.createElement('input');\n    checkbox.type = 'checkbox';\n    checkbox.classList.add('mdl-checkbox__input');\n    if (row) {\n        checkbox.checked = row.classList.contains(this.CssClasses_.IS_SELECTED);\n        checkbox.addEventListener('change', this.selectRow_(checkbox, row));\n    } else if (opt_rows) {\n        checkbox.addEventListener('change', this.selectRow_(checkbox, null, opt_rows));\n    }\n    label.appendChild(checkbox);\n    componentHandler.upgradeElement(label, 'MaterialCheckbox');\n    return label;\n};\n/**\n   * Initialize element.\n   */\nMaterialDataTable.prototype.init = function () {\n    if (this.element_) {\n        var firstHeader = this.element_.querySelector('th');\n        var bodyRows = Array.prototype.slice.call(this.element_.querySelectorAll('tbody tr'));\n        var footRows = Array.prototype.slice.call(this.element_.querySelectorAll('tfoot tr'));\n        var rows = bodyRows.concat(footRows);\n        if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {\n            var th = document.createElement('th');\n            var headerCheckbox = this.createCheckbox_(null, rows);\n            th.appendChild(headerCheckbox);\n            firstHeader.parentElement.insertBefore(th, firstHeader);\n            for (var i = 0; i < rows.length; i++) {\n                var firstCell = rows[i].querySelector('td');\n                if (firstCell) {\n                    var td = document.createElement('td');\n                    if (rows[i].parentNode.nodeName.toUpperCase() === 'TBODY') {\n                        var rowCheckbox = this.createCheckbox_(rows[i]);\n                        td.appendChild(rowCheckbox);\n                    }\n                    rows[i].insertBefore(td, firstCell);\n                }\n            }\n            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialDataTable,\n    classAsString: 'MaterialDataTable',\n    cssClass: 'mdl-js-data-table'\n});","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\nvar MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n    // Initialize instance.\n    this.init();\n};\nwindow['MaterialRipple'] = MaterialRipple;\n/**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\nMaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n};\n/**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\nMaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n};\n/**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n        var rect = this.element_.getBoundingClientRect();\n        this.boundHeight = rect.height;\n        this.boundWidth = rect.width;\n        this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;\n        this.rippleElement_.style.width = this.rippleSize_ + 'px';\n        this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n        this.ignoringMouseDown_ = false;\n    } else {\n        if (event.type === 'touchstart') {\n            this.ignoringMouseDown_ = true;\n        }\n        var frameCount = this.getFrameCount();\n        if (frameCount > 0) {\n            return;\n        }\n        this.setFrameCount(1);\n        var bound = event.currentTarget.getBoundingClientRect();\n        var x;\n        var y;\n        // Check if we are handling a keyboard click.\n        if (event.clientX === 0 && event.clientY === 0) {\n            x = Math.round(bound.width / 2);\n            y = Math.round(bound.height / 2);\n        } else {\n            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n            x = Math.round(clientX - bound.left);\n            y = Math.round(clientY - bound.top);\n        }\n        this.setRippleXY(x, y);\n        this.setRippleStyles(true);\n        window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n};\n/**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\nMaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n        // Allow a repaint to occur before removing this class, so the animation\n        // shows for tap events, which seem to trigger a mouseup too soon after\n        // mousedown.\n        window.setTimeout(function () {\n            this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n        }.bind(this), 0);\n    }\n};\n/**\n   * Initialize element.\n   */\nMaterialRipple.prototype.init = function () {\n    if (this.element_) {\n        var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n        if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);\n            this.frameCount_ = 0;\n            this.rippleSize_ = 0;\n            this.x_ = 0;\n            this.y_ = 0;\n            // Touch start produces a compat mouse down event, which would cause a\n            // second ripples. To avoid that, we use this property to ignore the first\n            // mouse down after a touch start.\n            this.ignoringMouseDown_ = false;\n            this.boundDownHandler = this.downHandler_.bind(this);\n            this.element_.addEventListener('mousedown', this.boundDownHandler);\n            this.element_.addEventListener('touchstart', this.boundDownHandler);\n            this.boundUpHandler = this.upHandler_.bind(this);\n            this.element_.addEventListener('mouseup', this.boundUpHandler);\n            this.element_.addEventListener('mouseleave', this.boundUpHandler);\n            this.element_.addEventListener('touchend', this.boundUpHandler);\n            this.element_.addEventListener('blur', this.boundUpHandler);\n            /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n            this.getFrameCount = function () {\n                return this.frameCount_;\n            };\n            /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n            this.setFrameCount = function (fC) {\n                this.frameCount_ = fC;\n            };\n            /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n            this.getRippleElement = function () {\n                return this.rippleElement_;\n            };\n            /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n            this.setRippleXY = function (newX, newY) {\n                this.x_ = newX;\n                this.y_ = newY;\n            };\n            /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n            this.setRippleStyles = function (start) {\n                if (this.rippleElement_ !== null) {\n                    var transformString;\n                    var scale;\n                    var size;\n                    var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n                    if (start) {\n                        scale = this.Constant_.INITIAL_SCALE;\n                        size = this.Constant_.INITIAL_SIZE;\n                    } else {\n                        scale = this.Constant_.FINAL_SCALE;\n                        size = this.rippleSize_ + 'px';\n                        if (recentering) {\n                            offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';\n                        }\n                    }\n                    transformString = 'translate(-50%, -50%) ' + offset + scale;\n                    this.rippleElement_.style.webkitTransform = transformString;\n                    this.rippleElement_.style.msTransform = transformString;\n                    this.rippleElement_.style.transform = transformString;\n                    if (start) {\n                        this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n                    } else {\n                        this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n                    }\n                }\n            };\n            /**\n         * Handles an animation frame.\n         */\n            this.animFrameHandler = function () {\n                if (this.frameCount_-- > 0) {\n                    window.requestAnimationFrame(this.animFrameHandler.bind(this));\n                } else {\n                    this.setRippleStyles(false);\n                }\n            };\n        }\n    }\n};\n// The component registers itself. It can assume componentHandler is available\n// in the global scope.\ncomponentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n});","if (false === (gWindow === window)) {\n  if (typeof module === 'object') {\n    var mdl = {};\n    mdl.componentHandler = window.componentHandler;\n    mdl.components = {};\n\n    mdl.components.MaterialButton = window.MaterialButton;\n    mdl.components.MaterialCheckbox = window.MaterialCheckbox;\n    mdl.components.MaterialDataTable = window.MaterialDataTable;\n    mdl.components.MaterialIconToggle = window.MaterialIconToggle;\n    mdl.components.MaterialLayout = window.MaterialLayout;\n    mdl.components.MaterialMenu = window.MaterialMenu;\n    mdl.components.MaterialProgress = window.MaterialProgress;\n    mdl.components.MaterialRadio = window.MaterialRadio;\n    mdl.components.MaterialRipple = window.MaterialRipple;\n    mdl.components.MaterialSlider = window.MaterialSlider;\n    mdl.components.MaterialSnackbar = window.MaterialSnackbar;\n    mdl.components.MaterialSpinner = window.MaterialSpinner;\n    mdl.components.MaterialSwitch = window.MaterialSwitch;\n    mdl.components.MaterialTabs = window.MaterialTabs;\n    mdl.components.MaterialTextfield = window.MaterialTextfield;\n    mdl.components.MaterialTooltip = window.MaterialTooltip;\n\n    module.exports = mdl;\n  } else {\n    gWindow[vendor] = gWindow[vendor] || {};\n    gWindow[vendor].mdl = window;\n  }\n}\n"],"sourceRoot":"/source/"}